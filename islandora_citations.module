<?php

/**
 * @file
 * General hook implementations.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function islandora_citations_form_field_config_edit_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $schema = json_decode(file_get_contents(__DIR__ . '/data/csl-data.json'), 1);

  if ($schema) {
    $cslPropertyArray = array_keys($schema['items']['properties']);
    $cslFieldOptions = array_combine($cslPropertyArray, $cslPropertyArray);
    $entity = $form_state->getFormObject()->getEntity();

    $form['islandora_citations'] = [
      '#title' => 'Citation Settings',
      '#type' => 'fieldset',
    ];

    // For typed relation, there is no separate mapping.
    // It can just be enabled and the mapping will be based on rel type.
    if ($entity->getType() == 'typed_relation') {
      $form['islandora_citations']['use_entity_checkbox'] = [
        '#title' => t('Map CSL from relation type'),
        '#description' => t('Enable mapping of this typed relation  field from the selected relation type. Rel types, author and creator both get mapped to author.'),
        '#type' => 'checkbox',
        '#required' => FALSE,
        '#default_value' => $entity->getThirdPartySetting('islandora_citations', 'use_entity_checkbox'),
      ];
    }

    // For ERR (paragraphs), we only allow mapping from entity.
    // Fields mapped inside the paragraph are only considered, else ignored.
    // For ER fields, we allow both mapping selected from entity
    // or mapping just the title of the ER entity.
    if ($entity->getType() == 'entity_reference_revisions' || $entity->getType() == 'entity_reference') {
      $form['islandora_citations']['use_entity_checkbox'] = [
        '#title' => t('Map from referenced entity'),
        '#description' => \t('If this field is enabled, the csl mapping will be taken from the referenced entity. Make sure you map fields in the referenced entity before enabling this.'),
        '#type' => 'checkbox',
        '#required' => FALSE,
        '#default_value' => $entity->getThirdPartySetting('islandora_citations', 'use_entity_checkbox'),
      ];
    }

    // We do not allow direct mapping for typed relation or ERR.
    if (!($entity->getType() === 'entity_reference_revisions' || $entity->getType() === 'typed_relation')) {
      $form['islandora_citations']['csl_field'] = [
        '#type' => 'select',
        '#title' => \t('CSL Field'),
        '#description' => \t('Select which CSL value this field should be mapped to.'),
        '#empty_option' => \t('- Select -'),
        '#multiple' => TRUE,
        '#options' => $cslFieldOptions,
        '#default_value' => $entity->getThirdPartySetting('islandora_citations', 'csl_field'),
      ];
    }

    $form['#entity_builders'][] = 'islandora_citations_field_config_edit_form_form_builder';
    return $form;
  }
}

/**
 * Entity builder for the config edit form with third party options.
 *
 * @see islandora_citations_field_config_edit_form_alter()
 */
function islandora_citations_field_config_edit_form_form_builder($entity_type, EntityInterface $configEntity, &$form, FormStateInterface $form_state) {
  $configEntity->setThirdPartySetting('islandora_citations', 'csl_field', $form_state->getValue('csl_field'));
  $configEntity->setThirdPartySetting('islandora_citations', 'use_entity_checkbox', $form_state->getValue('use_entity_checkbox'));
}

/**
 * Implements hook_theme().
 */
function islandora_citations_theme($existing, $type, $theme, $path) {
  return [
    'display_citations' => [
      'render element' => 'form',
    ],
  ];
}
